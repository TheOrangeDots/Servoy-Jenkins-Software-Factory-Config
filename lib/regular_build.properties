# ------------------------------------------------------------------------------------------------
# Mandatory properties to overwrite (through advanced config on the 'Invoke Ant' tasks on the Jenkins Job:
# - test.solution 
# - solution_under_testing (if the test_solution is not the solution that is being tested or doesn;t follwo the %%solutionName%%_test naming convention)
#
# This build setup assumes that the each solution to test comes with a %%solutionName%%_test solution, which is specified as test.solution
# If this is not the case, the ${solution_under_testing} property needs to be overridden (unless the testsolution and the solutionUnderTesting are the same (and the name doesn't end on '_test')
#
# Properties that you should set in Jenkins job configurations (ant advanced config; they will
# be available to ant and also have precedence over what is defined in this file
# ------------------------------------------------------------------------------------------------


# WORKSPACE property is normally already set by Jenkins in job build step
# ANT_CONTRIB_JAR is normally already set if you followed all the steps in "Building a Software Factory" WIKI
# page; it's set as a system property in global Jenkins configuration - environment variables
WORKSPACE                          	= ${env.WORKSPACE}
ANT_CONTRIB_JAR                    	= ${env.ANT_CONTRIB_JAR}

# Solutions to be exported and then tested; a comma separated list of solution names
#test.solution               		= [solutionName: while test runner supports comma separated list, other integration like Code Analysis/Coverage and the solutionImporter do not]
#solution_under_testing			    = [defaults to test.solution, stripped of postfix '_test' is exists]
![specify if the solution directory is not a direct child directory of ${WORSPACE}. Fragment should end with '/' and not start with one]
workspace_to_solution_dir_path_fragment = 


# Servoy developer installation that will be used for exporting/testing (a separate install
# is recommended for each Jenkins job in case multiple jobs are configured to run concurrently)
work.servoy.install.dir             = C:/Servoy
servoy.developer.dir      			= ${work.servoy.install.dir}/developer
servoy.app_server.dir     			= ${work.servoy.install.dir}/application_server
work.servoy.install.url             = http://localhost:8080
antRunner.dir             			= ${WORKSPACE}/${test.solution}/continuousIntegration
lib.dir								= ${antRunner.dir}/lib
build.dir							= ${antRunner.dir}/build
job.dir								= ${env.JENKINS_HOME}/jobs/${env.JOB_NAME}
servoy.test.property.file 			= ${servoy.app_server.dir}/servoy.properties
servoy.exporter.memory.xms			= -Xms40m
servoy.exporter.memory.xmx			= -Xmx2048m
servoy.exporter.memory.maxpermsize	= -XX:MaxPermSize=256M
servoy.tester.memory.xms			= ${servoy.exporter.memory.xms}
servoy.tester.memory.xmx			= ${servoy.exporter.memory.xmx}
servoy.tester.memory.maxpermsize	= ${servoy.exporter.memory.maxpermsize}

# 1 hour time-out; override as needed - depending on how long it usually takes for your solution tests to run (should probably be lower in most cases)
test.timeout.minutes                = 60
#solution-load.timeout.minutes	    = [defaults to ${test.timeout.minutes}]


# ------------------------------------------------------------------------------------------------
# Derived directories: can be changed, but defaults are fine as well -----------------------------
# ------------------------------------------------------------------------------------------------
test.exports.regular.dir   			= ${build.dir}/solutionExportsForTesting
junit.result.dir          			= ${build.dir}/jsunit_results
passed.exports.dir        			= ${build.dir}/passedExports
passed.exports.regular.dir  		= ${passed.exports.dir}/regular


# ------------------------------------------------------------------------------------------------
# Code Analysis settings -------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------
code.analysis.enabled 				= true
code.analysis.failOnError 			= true

# plato properties. input and output directory path is relative to workspace directory.
# code.analysis.input.dir 			= [defaults to ${solution_under_testing}]
code.analysis.output.dir 			= ${job.dir}/CodeAnalysisReport
# code.analysis.exclude.list 		= [comma separated list of paths/files to exclude from the report. See https://github.com/es-analysis/plato/issues/41]

!possible values for code.analysis.linter: eslint|jshint
code.analysis.linter 				= eslint
code.analysis.settings.jshint 		= ${lib.dir}/.jshintrc
code.analysis.settings.eslint 		= ${lib.dir}/.eslintrc.json


# ------------------------------------------------------------------------------------------------
# Code Coverage settings -------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------
code.coverage.enabled 				= true
code.coverage.failOnError 			= true
code.coverage.report-formats 		= lcov,cobertura

instrument.exclude 					= ${instrument.exclude.modules}
instrument.include 					= ${instrument.include.modules}

# workspace copy directories used for instrumenting the codebase and running the tests on the instrumented codebase
code.coverage.instrumented_workspace	 = ${WORKSPACE}_instrumented
code.coverage.instrumented_workspace.tmp = ${WORKSPACE}_instrumented_tmp

code.coverage.output.dir 			= ${build.dir}/CodeCoverageReport